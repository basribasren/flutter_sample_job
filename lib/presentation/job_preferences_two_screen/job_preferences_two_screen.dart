import '../job_preferences_two_screen/widgets/any2_item_widget.dart';import '../job_preferences_two_screen/widgets/any_item_widget.dart';import '../job_preferences_two_screen/widgets/productdesigner_item_widget.dart';import '../job_preferences_two_screen/widgets/worldwide_item_widget.dart';import 'bloc/job_preferences_two_bloc.dart';import 'models/any2_item_model.dart';import 'models/any_item_model.dart';import 'models/job_preferences_two_model.dart';import 'models/productdesigner_item_model.dart';import 'models/worldwide_item_model.dart';import 'package:basri_s_application5/core/app_export.dart';import 'package:basri_s_application5/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application5/widgets/app_bar/appbar_subtitle_two.dart';import 'package:basri_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application5/widgets/custom_elevated_button.dart';import 'package:flutter/material.dart';class JobPreferencesTwoScreen extends StatelessWidget {const JobPreferencesTwoScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<JobPreferencesTwoBloc>(create: (context) => JobPreferencesTwoBloc(JobPreferencesTwoState(jobPreferencesTwoModelObj: JobPreferencesTwoModel()))..add(JobPreferencesTwoInitialEvent()), child: JobPreferencesTwoScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 30.v), child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [_buildSelectLocation(context, selectLocationText: "msg_select_job_roles".tr, seeAllText: "lbl_see_all".tr), SizedBox(height: 14.v), _buildProductDesigner(context), SizedBox(height: 37.v), _buildSelectLocation(context, selectLocationText: "lbl_select_location".tr, seeAllText: "lbl_see_all".tr), SizedBox(height: 15.v), _buildWorldwide(context), SizedBox(height: 40.v), _buildSelectLocation(context, selectLocationText: "lbl_job_type".tr, seeAllText: "lbl_see_all".tr), SizedBox(height: 12.v), _buildAny(context), SizedBox(height: 41.v), _buildSelectLocation(context, selectLocationText: "lbl_office".tr, seeAllText: "lbl_see_all".tr), SizedBox(height: 15.v), _buildAny1(context), SizedBox(height: 2.v)])), bottomNavigationBar: _buildSave(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 36.v, leadingWidth: 42.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowLeft, margin: EdgeInsets.only(left: 18.h, top: 6.v, bottom: 6.v), onTap: () {onTapArrowLeft(context);}), centerTitle: true, title: AppbarSubtitleTwo(text: "lbl_job_preferences".tr), styleType: Style.bgFill); } 
/// Section Widget
Widget _buildProductDesigner(BuildContext context) { return BlocSelector<JobPreferencesTwoBloc, JobPreferencesTwoState, JobPreferencesTwoModel?>(selector: (state) => state.jobPreferencesTwoModelObj, builder: (context, jobPreferencesTwoModelObj) {return Wrap(runSpacing: 12.v, spacing: 12.h, children: List<Widget>.generate(jobPreferencesTwoModelObj?.productdesignerItemList.length ?? 0, (index) {ProductdesignerItemModel model = jobPreferencesTwoModelObj?.productdesignerItemList[index] ?? ProductdesignerItemModel(); return ProductdesignerItemWidget(model, onSelectedChipView: (value) {context.read<JobPreferencesTwoBloc>().add(UpdateChipViewEvent(index: index, isSelected: value));});}));}); } 
/// Section Widget
Widget _buildWorldwide(BuildContext context) { return BlocSelector<JobPreferencesTwoBloc, JobPreferencesTwoState, JobPreferencesTwoModel?>(selector: (state) => state.jobPreferencesTwoModelObj, builder: (context, jobPreferencesTwoModelObj) {return Wrap(runSpacing: 12.v, spacing: 12.h, children: List<Widget>.generate(jobPreferencesTwoModelObj?.worldwideItemList.length ?? 0, (index) {WorldwideItemModel model = jobPreferencesTwoModelObj?.worldwideItemList[index] ?? WorldwideItemModel(); return WorldwideItemWidget(model, onSelectedChipView: (value) {context.read<JobPreferencesTwoBloc>().add(UpdateChipView1Event(index: index, isSelected: value));});}));}); } 
/// Section Widget
Widget _buildAny(BuildContext context) { return Align(alignment: Alignment.centerLeft, child: BlocSelector<JobPreferencesTwoBloc, JobPreferencesTwoState, JobPreferencesTwoModel?>(selector: (state) => state.jobPreferencesTwoModelObj, builder: (context, jobPreferencesTwoModelObj) {return Wrap(runSpacing: 12.v, spacing: 12.h, children: List<Widget>.generate(jobPreferencesTwoModelObj?.anyItemList.length ?? 0, (index) {AnyItemModel model = jobPreferencesTwoModelObj?.anyItemList[index] ?? AnyItemModel(); return AnyItemWidget(model, onSelectedChipView: (value) {context.read<JobPreferencesTwoBloc>().add(UpdateChipView2Event(index: index, isSelected: value));});}));})); } 
/// Section Widget
Widget _buildAny1(BuildContext context) { return Align(alignment: Alignment.centerLeft, child: BlocSelector<JobPreferencesTwoBloc, JobPreferencesTwoState, JobPreferencesTwoModel?>(selector: (state) => state.jobPreferencesTwoModelObj, builder: (context, jobPreferencesTwoModelObj) {return Wrap(runSpacing: 12.v, spacing: 12.h, children: List<Widget>.generate(jobPreferencesTwoModelObj?.any2ItemList.length ?? 0, (index) {Any2ItemModel model = jobPreferencesTwoModelObj?.any2ItemList[index] ?? Any2ItemModel(); return Any2ItemWidget(model, onSelectedChipView: (value) {context.read<JobPreferencesTwoBloc>().add(UpdateChipView3Event(index: index, isSelected: value));});}));})); } 
/// Section Widget
Widget _buildSave(BuildContext context) { return CustomElevatedButton(text: "lbl_save".tr, margin: EdgeInsets.only(left: 24.h, right: 24.h, bottom: 34.v)); } 
/// Common widget
Widget _buildSelectLocation(BuildContext context, {required String selectLocationText, required String seeAllText, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text(selectLocationText, style: theme.textTheme.titleMedium!.copyWith(color: theme.colorScheme.onPrimary.withOpacity(1))), Padding(padding: EdgeInsets.only(top: 2.v), child: Text(seeAllText, style: CustomTextStyles.bodyMediumGray500_1.copyWith(color: appTheme.gray500)))]); } 

/// Navigates to the previous screen.
onTapArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
 }
