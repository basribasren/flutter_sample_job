import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/widget_item_model.dart';import 'package:basri_s_application5/presentation/resume_portfolio_uploading_screen/models/resume_portfolio_uploading_model.dart';part 'resume_portfolio_uploading_event.dart';part 'resume_portfolio_uploading_state.dart';/// A bloc that manages the state of a ResumePortfolioUploading according to the event that is dispatched to it.
class ResumePortfolioUploadingBloc extends Bloc<ResumePortfolioUploadingEvent, ResumePortfolioUploadingState> {ResumePortfolioUploadingBloc(ResumePortfolioUploadingState initialState) : super(initialState) { on<ResumePortfolioUploadingInitialEvent>(_onInitialize); on<UpdateChipViewEvent>(_updateChipView); }

_onInitialize(ResumePortfolioUploadingInitialEvent event, Emitter<ResumePortfolioUploadingState> emit, ) async  { emit(state.copyWith(resumePortfolioUploadingModelObj: state.resumePortfolioUploadingModelObj?.copyWith(widgetItemList: fillWidgetItemList()))); } 
_updateChipView(UpdateChipViewEvent event, Emitter<ResumePortfolioUploadingState> emit, ) { List<WidgetItemModel> newList = List<WidgetItemModel>.from(state.resumePortfolioUploadingModelObj!.widgetItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(resumePortfolioUploadingModelObj: state.resumePortfolioUploadingModelObj?.copyWith(widgetItemList: newList))); } 
List<WidgetItemModel> fillWidgetItemList() { return List.generate(4, (index) => WidgetItemModel()); } 
 }
