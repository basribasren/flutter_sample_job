import 'bloc/register_one_bloc.dart';import 'models/register_one_model.dart';import 'package:basri_s_application5/core/app_export.dart';import 'package:basri_s_application5/core/utils/validation_functions.dart';import 'package:basri_s_application5/widgets/app_bar/appbar_leading_image.dart';import 'package:basri_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application5/widgets/custom_elevated_button.dart';import 'package:basri_s_application5/widgets/custom_icon_button.dart';import 'package:basri_s_application5/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class RegisterOneScreen extends StatelessWidget {RegisterOneScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<RegisterOneBloc>(create: (context) => RegisterOneBloc(RegisterOneState(registerOneModelObj: RegisterOneModel()))..add(RegisterOneInitialEvent()), child: RegisterOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 19.v), child: Column(children: [Align(alignment: Alignment.centerLeft, child: Text("lbl_j_bizz".tr, textAlign: TextAlign.center, style: theme.textTheme.titleLarge)), SizedBox(height: 8.v), Align(alignment: Alignment.centerLeft, child: Text("lbl_registration".tr, style: theme.textTheme.headlineSmall)), SizedBox(height: 7.v), Align(alignment: Alignment.centerLeft, child: Opacity(opacity: 0.4, child: Text("msg_let_s_register".tr, style: CustomTextStyles.bodyMediumOnPrimary14_1))), SizedBox(height: 29.v), _buildRegistrationForm(context), SizedBox(height: 16.v), _buildFullName(context), SizedBox(height: 16.v), _buildPassword(context), SizedBox(height: 16.v), _buildConfirmPassword(context), SizedBox(height: 32.v), _buildRegisterButton(context), SizedBox(height: 31.v), _buildSocialMediaButtons(context), SizedBox(height: 31.v), Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomIconButton(height: 56.adaptSize, width: 56.adaptSize, padding: EdgeInsets.all(15.h), child: CustomImageView(imagePath: ImageConstant.imgCibApple)), Padding(padding: EdgeInsets.only(left: 24.h), child: CustomIconButton(height: 56.adaptSize, width: 56.adaptSize, padding: EdgeInsets.all(14.h), child: CustomImageView(imagePath: ImageConstant.imgFlatColorIconsGoogle))), Padding(padding: EdgeInsets.only(left: 24.h), child: CustomIconButton(height: 56.adaptSize, width: 56.adaptSize, padding: EdgeInsets.all(14.h), child: CustomImageView(imagePath: ImageConstant.imgIonLogoFacebook)))]), SizedBox(height: 33.v), RichText(text: TextSpan(children: [TextSpan(text: "lbl_have".tr, style: CustomTextStyles.bodyMediumCircularStdGray40001), TextSpan(text: " "), TextSpan(text: "lbl_an_account".tr, style: CustomTextStyles.bodyMediumCircularStdGray40001), TextSpan(text: "lbl_log_in".tr, style: CustomTextStyles.bodyMediumCircularStdPrimary14)]), textAlign: TextAlign.left), SizedBox(height: 5.v)]))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 40.v, leadingWidth: double.maxFinite, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowLeft, margin: EdgeInsets.only(left: 18.h, right: 333.h), onTap: () {onTapArrowLeft(context);})); } 
/// Section Widget
Widget _buildUser(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 23.h), child: BlocSelector<RegisterOneBloc, RegisterOneState, TextEditingController?>(selector: (state) => state.userController, builder: (context, userController) {return CustomTextFormField(width: 20.adaptSize, controller: userController, alignment: Alignment.centerLeft, suffix: SizedBox(child: CustomImageView(imagePath: ImageConstant.imgUserOnprimarycontainer, height: 20.adaptSize, width: 20.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 20.v), borderDecoration: TextFormFieldStyleHelper.custom);})); } 
/// Section Widget
Widget _buildRegistrationForm(BuildContext context) { return SizedBox(height: 52.v, width: 327.h, child: Stack(alignment: Alignment.centerLeft, children: [Align(alignment: Alignment.center, child: Container(width: 327.h, padding: EdgeInsets.symmetric(horizontal: 30.h, vertical: 15.v), decoration: AppDecoration.outlineOnPrimaryContainer.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Text("lbl_full_name".tr, style: CustomTextStyles.bodyMediumOnPrimaryContainer14))), _buildUser(context)])); } 
/// Section Widget
Widget _buildFullName(BuildContext context) { return BlocSelector<RegisterOneBloc, RegisterOneState, TextEditingController?>(selector: (state) => state.fullNameController, builder: (context, fullNameController) {return CustomTextFormField(controller: fullNameController, hintText: "lbl_e_mail".tr, textInputType: TextInputType.emailAddress, prefix: Container(margin: EdgeInsets.fromLTRB(24.h, 16.v, 12.h, 16.v), child: CustomImageView(imagePath: ImageConstant.imgMail, height: 20.v, width: 19.h)), prefixConstraints: BoxConstraints(maxHeight: 52.v), validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;}, contentPadding: EdgeInsets.only(top: 15.v, right: 30.h, bottom: 15.v));}); } 
/// Section Widget
Widget _buildPassword(BuildContext context) { return BlocBuilder<RegisterOneBloc, RegisterOneState>(builder: (context, state) {return CustomTextFormField(controller: state.passwordController, hintText: "lbl_password".tr, textInputType: TextInputType.visiblePassword, prefix: Container(margin: EdgeInsets.fromLTRB(24.h, 16.v, 11.h, 16.v), child: CustomImageView(imagePath: ImageConstant.imgPassword61, height: 20.adaptSize, width: 20.adaptSize)), prefixConstraints: BoxConstraints(maxHeight: 52.v), suffix: InkWell(onTap: () {context.read<RegisterOneBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 14.v, 23.h, 14.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 24.adaptSize, width: 24.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 52.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword);}); } 
/// Section Widget
Widget _buildConfirmPassword(BuildContext context) { return BlocBuilder<RegisterOneBloc, RegisterOneState>(builder: (context, state) {return CustomTextFormField(controller: state.confirmPasswordController, hintText: "msg_confirm_password".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, prefix: Container(margin: EdgeInsets.fromLTRB(24.h, 16.v, 11.h, 16.v), child: CustomImageView(imagePath: ImageConstant.imgPassword61, height: 20.adaptSize, width: 20.adaptSize)), prefixConstraints: BoxConstraints(maxHeight: 52.v), suffix: InkWell(onTap: () {context.read<RegisterOneBloc>().add(ChangePasswordVisibilityEvent1(value: !state.isShowPassword1));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 14.v, 23.h, 14.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 24.adaptSize, width: 24.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 52.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword1);}); } 
/// Section Widget
Widget _buildRegisterButton(BuildContext context) { return CustomElevatedButton(text: "lbl_register".tr); } 
/// Section Widget
Widget _buildSocialMediaButtons(BuildContext context) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.symmetric(vertical: 8.v), child: SizedBox(width: 98.h, child: Divider())), Text("msg_or_continue_with".tr, style: CustomTextStyles.bodyMediumCircularStdOnPrimaryContainer), Padding(padding: EdgeInsets.symmetric(vertical: 8.v), child: SizedBox(width: 98.h, child: Divider()))]); } 

/// Navigates to the previous screen.
onTapArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
 }
