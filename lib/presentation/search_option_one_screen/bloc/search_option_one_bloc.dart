import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/chipview_item_model.dart';import 'package:basri_s_application5/presentation/search_option_one_screen/models/search_option_one_model.dart';part 'search_option_one_event.dart';part 'search_option_one_state.dart';/// A bloc that manages the state of a SearchOptionOne according to the event that is dispatched to it.
class SearchOptionOneBloc extends Bloc<SearchOptionOneEvent, SearchOptionOneState> {SearchOptionOneBloc(SearchOptionOneState initialState) : super(initialState) { on<SearchOptionOneInitialEvent>(_onInitialize); on<UpdateChipViewEvent>(_updateChipView); }

_onInitialize(SearchOptionOneInitialEvent event, Emitter<SearchOptionOneState> emit, ) async  { emit(state.copyWith(searchOptionOneModelObj: state.searchOptionOneModelObj?.copyWith(chipviewItemList: fillChipviewItemList()))); } 
_updateChipView(UpdateChipViewEvent event, Emitter<SearchOptionOneState> emit, ) { List<ChipviewItemModel> newList = List<ChipviewItemModel>.from(state.searchOptionOneModelObj!.chipviewItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(searchOptionOneModelObj: state.searchOptionOneModelObj?.copyWith(chipviewItemList: newList))); } 
List<ChipviewItemModel> fillChipviewItemList() { return List.generate(9, (index) => ChipviewItemModel()); } 
 }
